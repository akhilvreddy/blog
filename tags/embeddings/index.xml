<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Embeddings on Akhil's Blog</title><link>https://akhilvreddy.github.io/blog/tags/embeddings/</link><description>Recent content in Embeddings on Akhil's Blog</description><generator>Hugo</generator><language>en</language><copyright>&lt;a href="https://creativecommons.org/licenses/by-nc/4.0/" target="_blank" rel="noopener">CC BY-NC 4.0&lt;/a></copyright><lastBuildDate>Mon, 16 Jun 2025 18:12:56 -0400</lastBuildDate><atom:link href="https://akhilvreddy.github.io/blog/tags/embeddings/index.xml" rel="self" type="application/rss+xml"/><item><title>word2vec from scratch: Intuition to Implementation</title><link>https://akhilvreddy.github.io/blog/posts/2025/06/word2vec-from-scratch-intuition-to-implementation/</link><pubDate>Mon, 16 Jun 2025 18:12:56 -0400</pubDate><guid>https://akhilvreddy.github.io/blog/posts/2025/06/word2vec-from-scratch-intuition-to-implementation/</guid><description>&lt;p>Have you ever thought about how we teach machines which words are similar — and which ones aren’t? It&amp;rsquo;s wild to realize that our phones had smart autocomplete features &lt;em>decades&lt;/em> before modern AI tools like ChatGPT became mainstream.&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Word embeddings laid the foundation for modern NLP models. Before transformer-style architectures took over (with their dynamic embeddings), Word2Vec was the go-to method for capturing the semantic meaning of words through dense (~ 100-300 dim) vectors.&lt;/p></description></item></channel></rss>